//Generated by GetuseModelListts - useModelList.ts
"use client";
import { GetCandidatesResponse } from "@/interfaces/CandidateInterfaces";
import { CandidateSearchParams } from "@/interfaces/CandidateInterfaces";
import { BasicModel } from "@/interfaces/GeneralInterfaces";
import axiosClient from "@/utils/api";
import { useQuery } from "@tanstack/react-query";
import { useEffect, useState } from "react";

const getCandidates = async () => {
  const { data } = await axiosClient.get<GetCandidatesResponse>(`candidates`, {
    params: {
      fetchCount: "false",
      simpleOnly: "true",
    } as Partial<CandidateSearchParams>,
  });

  return data.rows.map((item) => ({
    id: item.id,
    name: item.id.toString(),
  }));
};

interface UseListProps {
  placeholderData?: BasicModel[];
}

const useCandidateList = (prop?: UseListProps) => {
  //local states
  const [mounted, setMounted] = useState(false);

  const _ = useQuery({
    queryKey: ["candidate-list"],
    queryFn: getCandidates,
    enabled: mounted,
    placeholderData: prop?.placeholderData,
  });

  useEffect(() => {
    setMounted(true);
  }, []);

  return _;
};

export default useCandidateList;
