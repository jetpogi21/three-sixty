//Generated by WriteToModelinterface_ts - ModelInterface.ts Next 13


import { ListQuery } from "./interface";

export interface ProviderSourceModel {
  //Generated by GetAllModelFieldTypeBySeqModel
id: number | string;//Generated by GetModelFieldType
name: string;//Generated by GetModelFieldType
slug: string;
createdAt: string;
updatedAt: string;
  
  
  
}

//The keys after the updatedAt is generated by GetAllRelatedModelNameBySeqModel - RelatedModelName
export interface ProviderSourceFormikShape extends Omit<ProviderSourceModel, "slug" | "createdAt" | "updatedAt" 
 
> {
  touched: boolean;
  index: number;
}

//Use for continuos list form
export interface ProviderSourceFormikInitialValues {
  ProviderSources: ProviderSourceFormikShape[];
  
}

//The FormikInitialValues is generated by GetAllRelatedFormikInitialValues - ModelFormikInitialValue
export interface ProviderSourceFormFormikInitialValues
  extends Omit<ProviderSourceFormikShape, "touched" | "index"> {
  
}

//The extends portion is generated by GetModelUpdatePayloadExtension - GetRelatedPartialPayload
export interface ProviderSourceUpdatePayload  {
  ProviderSources: Omit<ProviderSourceFormikShape, "touched">[];
  
}

export interface ProviderSourceDeletePayload {
  deletedProviderSources: string[] | number[];
}

//Use for single form (with children)
//The Related Models will be replaced by the Payload version
export interface ProviderSourceFormUpdatePayload
  extends Omit<ProviderSourceFormikShape, "touched" | "index" 
> 
 
{
  
}

export interface ProviderSourceFormikFilter {
  //Generated by GetAllFilterInterfaceBySeqmodel
q: string
}

export interface ProviderSourceSearchParams
  extends ListQuery,
    Omit<ProviderSourceFormikFilter, ""> {
  //Generated by GetAllNonStringFilterTypes

}

export interface GetProviderSourcesResponse {
  count: number;
  rows: ProviderSourceModel[];
  cursor: string;
}
