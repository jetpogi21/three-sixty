//Generated by WriteToModelinterface_ts - ModelInterface.ts Next 13


import { ListQuery } from "./interface";

export interface PositionModel {
  //Generated by GetAllModelFieldTypeBySeqModel
id: number | string;//Generated by GetModelFieldType
name: string;//Generated by GetModelFieldType
slug: string;
createdAt: string;
updatedAt: string;
  
  
  
}

//The keys after the updatedAt is generated by GetAllRelatedModelNameBySeqModel - RelatedModelName
export interface PositionFormikShape extends Omit<PositionModel, "slug" | "createdAt" | "updatedAt" 
 
> {
  touched: boolean;
  index: number;
}

//Use for continuos list form
export interface PositionFormikInitialValues {
  Positions: PositionFormikShape[];
  
}

//The FormikInitialValues is generated by GetAllRelatedFormikInitialValues - ModelFormikInitialValue
export interface PositionFormFormikInitialValues
  extends Omit<PositionFormikShape, "touched" | "index"> {
  
}

//The extends portion is generated by GetModelUpdatePayloadExtension - GetRelatedPartialPayload
export interface PositionUpdatePayload  {
  Positions: Omit<PositionFormikShape, "touched">[];
  
}

export interface PositionDeletePayload {
  deletedPositions: string[] | number[];
}

//Use for single form (with children)
//The Related Models will be replaced by the Payload version
export interface PositionFormUpdatePayload
  extends Omit<PositionFormikShape, "touched" | "index" 
> 
 
{
  
}

export interface PositionFormikFilter {
  //Generated by GetAllFilterInterfaceBySeqmodel
q: string
}

export interface PositionSearchParams
  extends ListQuery,
    Omit<PositionFormikFilter, ""> {
  //Generated by GetAllNonStringFilterTypes

}

export interface GetPositionsResponse {
  count: number;
  rows: PositionModel[];
  cursor: string;
}
