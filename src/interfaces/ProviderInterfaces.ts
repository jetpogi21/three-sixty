//Generated by WriteToModelinterface_ts - ModelInterface.ts Next 13

import { ListQuery } from "./interface";

export interface ProviderModel {
  //Generated by GetAllModelFieldTypeBySeqModel
  id: number | string; //Generated by GetModelFieldType
  name: string; //Generated by GetModelFieldType
  slug: string;
  createdAt: string;
  updatedAt: string;
}

//The keys after the updatedAt is generated by GetAllRelatedModelNameBySeqModel - RelatedModelName
export interface ProviderFormikShape
  extends Omit<ProviderModel, "slug" | "createdAt" | "updatedAt"> {
  touched: boolean;
  index: number;
}

//Use for continuos list form
export interface ProviderFormikInitialValues {
  Providers: ProviderFormikShape[];
}

//The FormikInitialValues is generated by GetAllRelatedFormikInitialValues - ModelFormikInitialValue
export interface ProviderFormFormikInitialValues
  extends Omit<ProviderFormikShape, "touched" | "index"> {}

//The extends portion is generated by GetModelUpdatePayloadExtension - GetRelatedPartialPayload
export interface ProviderUpdatePayload {
  Providers: Omit<ProviderFormikShape, "touched">[];
}

export interface ProviderDeletePayload {
  deletedProviders: string[] | number[];
}

//Use for single form (with children)
//The Related Models will be replaced by the Payload version
export interface ProviderFormUpdatePayload
  extends Omit<ProviderFormikShape, "touched" | "index"> {}

export interface ProviderFormikFilter {
  //Generated by GetAllFilterInterfaceBySeqmodel
  q: string;
}

export interface ProviderSearchParams
  extends ListQuery,
    Omit<ProviderFormikFilter, ""> {
  //Generated by GetAllNonStringFilterTypes
}

export interface GetProvidersResponse {
  count: number;
  rows: ProviderModel[];
  cursor: string;
}
