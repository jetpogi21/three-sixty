//Generated by WriteToModelinterface_ts - ModelInterface.ts Next 13


import { ListQuery } from "./interface";

export interface DivisionModel {
  //Generated by GetAllModelFieldTypeBySeqModel
id: number | string;//Generated by GetModelFieldType
name: string;//Generated by GetModelFieldType
slug: string;
createdAt: string;
updatedAt: string;
  
  
  
}

//The keys after the updatedAt is generated by GetAllRelatedModelNameBySeqModel - RelatedModelName
export interface DivisionFormikShape extends Omit<DivisionModel, "slug" | "createdAt" | "updatedAt" 
 
> {
  touched: boolean;
  index: number;
}

//Use for continuos list form
export interface DivisionFormikInitialValues {
  Divisions: DivisionFormikShape[];
  
}

//The FormikInitialValues is generated by GetAllRelatedFormikInitialValues - ModelFormikInitialValue
export interface DivisionFormFormikInitialValues
  extends Omit<DivisionFormikShape, "touched" | "index"> {
  
}

//The extends portion is generated by GetModelUpdatePayloadExtension - GetRelatedPartialPayload
export interface DivisionUpdatePayload  {
  Divisions: Omit<DivisionFormikShape, "touched">[];
  
}

export interface DivisionDeletePayload {
  deletedDivisions: string[] | number[];
}

//Use for single form (with children)
//The Related Models will be replaced by the Payload version
export interface DivisionFormUpdatePayload
  extends Omit<DivisionFormikShape, "touched" | "index" 
> 
 
{
  
}

export interface DivisionFormikFilter {
  //Generated by GetAllFilterInterfaceBySeqmodel
q: string
}

export interface DivisionSearchParams
  extends ListQuery,
    Omit<DivisionFormikFilter, ""> {
  //Generated by GetAllNonStringFilterTypes

}

export interface GetDivisionsResponse {
  count: number;
  rows: DivisionModel[];
  cursor: string;
}
