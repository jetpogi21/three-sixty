"use client";
import { ColumnDef } from "@tanstack/react-table";
import { Checkbox } from "@/components/ui/Checkbox";
import { DataTableColumnHeader } from "@/components/ui/DataTable/DataTableColumnHeader";
import { DeleteRowColumn } from "@/components/ui/DataTable/DeleteRowColumn";
import { FileState } from "@/interfaces/GeneralInterfaces";
import { FileIcon } from "lucide-react";
import { formatFileSize } from "@/utils/utilities";
import Link from "next/link";

export const FileColumns: ColumnDef<FileState>[] = [
  {
    id: "select",
    header: ({ table }) => {
      const toggleSelectAllRow = table.options.meta?.toggleSelectAllRow;
      return (
        <div className="flex justify-center w-full">
          <Checkbox
            tabIndex={-1}
            checked={table.getIsAllPageRowsSelected()}
            onCheckedChange={() => {
              toggleSelectAllRow && toggleSelectAllRow();
            }}
            aria-label="Select all"
          />
        </div>
      );
    },
    cell: ({ row, table }) => {
      const toggleRow = table.options.meta?.toggleRow;
      return (
        <div className="flex justify-center">
          <Checkbox
            tabIndex={-1}
            checked={row.getIsSelected()}
            onCheckedChange={() => {
              toggleRow && toggleRow(row.index);
            }}
            aria-label="Select row"
          />
        </div>
      );
    },
  },
  {
    accessorKey: "file",
    header: ({ column }) => (
      <DataTableColumnHeader
        column={column}
        title="File"
      />
    ),
    cell: (cell) => {
      const { name, size, url, uploadedOn } = cell.row.original;
      return (
        <div className="flex items-center gap-4">
          <FileIcon className="w-6 h-6" />
          <div className="flex flex-col ">
            <Link href={url}>{name}</Link>
            <div className="text-xs text-muted-foreground">
              {formatFileSize(size)}
            </div>
          </div>
        </div>
      );
    },
    enableSorting: false,
    meta: {
      alignment: "left",
    },
  },
  {
    id: "actions",
    //cell component generated by GetActionCell
    cell: (cell) => <DeleteRowColumn {...cell} />,
  },
];
