//Generated by ImportCompleteModelFile
//Generated by GetCompleteModelFile

//Generated by GetModelImports
import {
  CreationOptional,
  DataTypes,
  InferAttributes,
  InferCreationAttributes,
  Model,
  Sequelize,
} from "sequelize";
import sequelize from "../config/db";
import slugify from "slugify";

//Generated by GetModelInterface
export default interface Provider
  extends Model<InferAttributes<Provider>, InferCreationAttributes<Provider>> {
  id: CreationOptional<number>;
  name: string;
  slug: CreationOptional<string>;
  createdAt: CreationOptional<Date>;
  updatedAt: CreationOptional<Date>;
}

//Generated by GetModelDefinition
export const Provider = sequelize.define<Provider>(
  "Provider",
  //Generated by GetModelFieldsDictionary
  {
    id: {
      type: DataTypes.BIGINT,
      autoIncrement: true,
      primaryKey: true,
      field: "id",
    },
    name: {
      type: DataTypes.STRING(50),
      unique: true,
      field: "name",
    },
    slug: {
      type: DataTypes.STRING,
      unique: true,
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal("CURRENT_TIMESTAMP"),
      field: "createdAt",
    },
    updatedAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal("CURRENT_TIMESTAMP"),
      field: "updatedAt",
    },
  },
  //Generated By GetModelOptionDict
  {
    name: { singular: "Provider", plural: "Providers" },
    tableName: "providers",
  }
);

//Generated by GetModelHooks
Provider.beforeCreate((Provider: Provider, options) => {
  Provider.slug = slugify(Provider.name, {
    lower: true,
    remove: /[*+~.()'"!:@]/g,
    replacement: "-",
  });
});

Provider.beforeUpdate((Provider: Provider, options) => {
  Provider.slug = slugify(Provider.name, {
    lower: true,
    remove: /[*+~.()'"!:@]/g,
    replacement: "-",
  });
});

//Generated by GenerateSyncModel
export const ProviderSync = async () => {
  try {
    await Provider.sync({ alter: true });
    console.log("Provider table has been created!");
  } catch (error) {
    console.error(`Unable to create ${"Provider".toLowerCase()} table:`, error);
  }
};
