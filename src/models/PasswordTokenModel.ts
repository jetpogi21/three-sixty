//Generated by ImportCompleteModelFile
//Generated by GetCompleteModelFile

//Generated by GetModelImports
import {
  DataTypes,
  InferAttributes,
  InferCreationAttributes,
  Model,
} from "sequelize";
import sequelize from "../config/db";

//Generated by GetModelInterface
export default interface PasswordToken
  extends Model<
    InferAttributes<PasswordToken>,
    InferCreationAttributes<PasswordToken>
  > {
  token: string;
  email: string;
  expires: Date;
}

//Generated by GetModelDefinition
export const PasswordToken = sequelize.define<PasswordToken>(
  "PasswordToken",
  //Generated by GetModelFieldsDictionary
  {
    token: {
      type: DataTypes.STRING(100),
      primaryKey: true,
      field: "token",
    },
    email: {
      type: DataTypes.STRING(100),
      field: "email",
    },
    expires: {
      type: DataTypes.DATE,
      field: "expires",
    },
  },
  //Generated By GetModelOptionDict
  {
    name: { singular: "PasswordToken", plural: "PasswordTokens" },
    tableName: "password_tokens",
    timestamps: false,
  }
);

//Generated by GenerateSyncModel
export const PasswordTokenSync = async () => {
  try {
    await PasswordToken.sync({ alter: true });
    console.log("Password Token table has been created!");
  } catch (error) {
    console.error(
      `Unable to create ${"Password Token".toLowerCase()} table:`,
      error
    );
  }
};
