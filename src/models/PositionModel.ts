//Generated by ImportCompleteModelFile
//Generated by GetCompleteModelFile

//Generated by GetModelImports
import {CreationOptional,DataTypes,InferAttributes,InferCreationAttributes,Model,Sequelize} from "sequelize";
import sequelize from "../config/db";
import slugify from "slugify";

//Generated by GetModelInterface
export default interface Position extends Model<InferAttributes<Position>, InferCreationAttributes<Position>>
{id: CreationOptional<number>;
name: string;
slug : CreationOptional<string>;
createdAt: CreationOptional<Date>;
updatedAt: CreationOptional<Date>}

//Generated by GetModelDefinition
export const Position = sequelize.define<Position>(
"Position",
//Generated by GetModelFieldsDictionary
{
 id: {
  type: DataTypes.BIGINT,
  autoIncrement: true,
  primaryKey: true,
  field: "id"
 }
 ,
 name: {
  type: DataTypes.STRING(50),
  unique: true,
  field: "name"
 }
 ,
 slug: {
  type: DataTypes.STRING,
  unique: true
 }
 ,
 createdAt: {
  type: DataTypes.DATE,
  defaultValue: Sequelize.literal("CURRENT_TIMESTAMP"),
  field: "createdAt"
 },
 updatedAt: {
  type: DataTypes.DATE,
  defaultValue: Sequelize.literal("CURRENT_TIMESTAMP"),
  field: "updatedAt"
 }}
,
//Generated By GetModelOptionDict
{
  name: {singular: "Position",plural:"Positions"},
  tableName: "positions"
}
);

//Generated by GetModelHooks
Position.beforeCreate((Position: Position, options) => {
  Position.slug = slugify(Position.name, {
    lower: true,
    remove: /[*+~.()'"!:@]/g,
    replacement: "-",
  });
});

Position.beforeUpdate((Position: Position, options) => {
  Position.slug = slugify(Position.name, {
    lower: true,
    remove: /[*+~.()'"!:@]/g,
    replacement: "-",
  });
});

//Generated by GenerateSyncModel
export const PositionSync = async () => {
  try {
    await Position.sync({ alter: true });
    console.log("Position table has been created!");
  } catch (error) {
    console.error(
      `Unable to create ${"Position".toLowerCase()} table:`,
      error
    );
  }
};
