//Generated by GetCompleteNextAuthModelFile
import { models } from "@auth/sequelize-adapter";
import {
  CreationOptional,
  DataTypes,
  InferAttributes,
  InferCreationAttributes,
  Model,
} from "sequelize";
import sequelize from "../config/db";
//Generated by GetRelationshipImports

export default interface Session
  extends Model<InferAttributes<Session>, InferCreationAttributes<Session>> {
  id: CreationOptional<string>;
  expires: Date;
  sessionToken: string;
  userId: string;
  createdAt?: Date;
  updatedAt?: Date;
}

export const Session = sequelize.define<Session>(
  "session",
  {
    ...models.Session,
    //Generated by GetModelFieldsDictionary
  },
  {
    name: { singular: "Session", plural: "Sessions" },
    tableName: "sessions",
  }
);

//Generated by GetRelationshipDeclarations

export const SessionSync = async () => {
  try {
    await Session.sync({ alter: true });
    console.log("Session table has been created!");
  } catch (error) {
    console.error(`Unable to create ${"Session".toLowerCase()} table:`, error);
  }
};
