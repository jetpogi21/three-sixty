//Generated by ImportCompleteModelFile
//Generated by GetCompleteModelFile

//Generated by GetModelImports
import {
  CreationOptional,
  DataTypes,
  InferAttributes,
  InferCreationAttributes,
  Model,
  Sequelize,
} from "sequelize";
import sequelize from "../config/db";
import { Candidate } from "./CandidateModel";

//Generated by GetModelInterface
export default interface CandidateStatus
  extends Model<
    InferAttributes<CandidateStatus>,
    InferCreationAttributes<CandidateStatus>
  > {
  id: CreationOptional<number>;
  candidateID: number;
  statusID: number;
  createdAt: CreationOptional<Date>;
  updatedAt: CreationOptional<Date>;
}

//Generated by GetModelDefinition
export const CandidateStatus = sequelize.define<CandidateStatus>(
  "CandidateStatus",
  //Generated by GetModelFieldsDictionary
  {
    id: {
      type: DataTypes.BIGINT,
      autoIncrement: true,
      primaryKey: true,
      field: "id",
    },
    candidateID: {
      type: DataTypes.BIGINT,
      field: "candidate_id",
      //Generated by GetReferencesKeyForModelCreationMigration - references key for model creation
      references: {
        model: "candidates",
        key: "id",
      },
      onUpdate: "CASCADE",
      onDelete: "CASCADE",
    },
    statusID: {
      type: DataTypes.BIGINT,
      field: "status_id",
      //Generated by GetReferencesKeyForModelCreationMigration - references key for model creation
      references: {
        model: "status",
        key: "id",
      },
      onUpdate: "CASCADE",
      onDelete: "CASCADE",
    },
    createdAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal("CURRENT_TIMESTAMP"),
      field: "createdAt",
    },
    updatedAt: {
      type: DataTypes.DATE,
      defaultValue: Sequelize.literal("CURRENT_TIMESTAMP"),
      field: "updatedAt",
    },
  },
  //Generated By GetModelOptionDict
  {
    name: { singular: "CandidateStatus", plural: "CandidateStatus" },
    tableName: "candidate_status",
  }
);

//Generated by GenerateSyncModel
export const CandidateStatusSync = async () => {
  try {
    await CandidateStatus.sync({ alter: true });
    console.log("Candidate Status table has been created!");
  } catch (error) {
    console.error(
      `Unable to create ${"Candidate Status".toLowerCase()} table:`,
      error
    );
  }
};

//Generated by GenerateModelRelationship
Candidate.hasMany(CandidateStatus, {
  foreignKey: "candidate_id",
  onDelete: "CASCADE",
  onUpdate: "CASCADE",
});
CandidateStatus.belongsTo(Candidate, {
  foreignKey: "candidate_id",
  onDelete: "CASCADE",
  onUpdate: "CASCADE",
});
